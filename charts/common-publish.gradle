apply plugin: 'maven-publish'
apply plugin: 'signing'

task sourcesJar(type: Jar) {
    archiveClassifier.set('sources')
    from android.sourceSets.main.java.srcDirs
}

task dokkaJar(type: Jar, dependsOn: project.dokka) {
    archiveClassifier.set('javadoc')
    from dokka
}

def withSigning = hasProperty('signing.keyId')
def isSnapshot = libVersion.endsWith('SNAPSHOT')

afterEvaluate {
    publishing {
        publications {
            release(MavenPublication) {
                from components.release

                groupId = "$libGroupId"
                artifactId = "$libArtifactIdPrefix-${project.name}"
                version = "$libVersion"

                artifact(sourcesJar)
                artifact(dokkaJar)

                pom {
                    name = libName
                    description = libDescription
                    url = libUrl
                    licenses {
                        license {
                            name = 'The Apache License, Version 2.0'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                    developers {
                        developer {
                            id = 'sczerwinski'
                            name = 'Slawomir Czerwinski'
                            email = 'slawomir@czerwinski.it'
                        }
                    }
                    scm {
                        connection = scmConnection
                        developerConnection = scmConnection
                        url = scmUrl
                    }
                }
            }
        }
        repositories {
            maven {
                if (System.getenv('SONATYPE_USERNAME') != null) {
                    logger.quiet("Publishing to Sonatype")
                    url = isSnapshot ? ossrhSnapshotRepo : ossrhRepo
                    credentials {
                        username = System.getenv('SONATYPE_USERNAME')
                        password = System.getenv('SONATYPE_PASSWORD')
                    }
                } else if (project.hasProperty('ossrhUsername')) {
                    logger.quiet("Publishing to Sonatype")
                    url = isSnapshot ? ossrhSnapshotRepo : ossrhRepo
                    credentials {
                        username = ossrhUsername
                        password = ossrhPassword
                    }
                } else {
                    logger.quiet("Publishing to local repository")
                    url = "${buildDir}/repos"
                }
            }
        }
    }

    if (withSigning) {
        signing {
            sign publishing.publications.release
        }
    }
}
